scalar Date
scalar Time
scalar DateTime

type Query {
    characters: [Character!]!
    character(id: ID!): Character
    places: [Place!]!
    place(id: ID!): Place
    events: [Event!]!
    event(id: ID!): Event
}

type Mutation {
    createCharacter(name: String!, description: String!): Character!
    updateCharacter(id: ID!, name: String, description: String): Character
    deleteCharacter(id: ID!): Character
    createPlace(name: String!, description: String!): Place!
    updatePlace(id: ID!, name: String, description: String): Place
    deletePlace(id: ID!): Place
    createEvent(
        name: String!, description: String!,
        startDate: DateTime!, endDate: DateTime,
        characters: [ID!], places: [ID!]
    ): Event!
    updateEvent(
        id: ID!, name: String, description: String,
        startDate: DateTime, endDate: DateTime,
        characters: [ID!], places: [ID!]
    ): Event
    deleteEvent(id: ID!): Event
}

type Character {
    id: ID!
    name: String!
    description: String!
}

type Place {
    id: ID!
    name: String!
    description: String!
}

type Event {
    id: ID!
    name: String!
    description: String!
    startDate: DateTime!
    endDate: DateTime
    characters: [Character!]!
    places: [Place!]!
}
